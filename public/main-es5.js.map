{"version":3,"sources":["webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/admin-panel/admin-panel.component.ts","webpack:///src/app/components/admin-panel/admin-panel.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/form/user/user.component.ts","webpack:///src/app/components/form/user/user.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/user-all-table/user-all-table.component.ts","webpack:///src/app/components/user-all-table/user-all-table.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/application/application.component.ts","webpack:///src/app/components/application/application.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/user-search/user-search.component.ts","webpack:///src/app/components/user-search/user-search.component.html","webpack:///src/app/libre/format.ts","webpack:///src/app/components/form/download/download.component.ts","webpack:///src/app/components/form/download/download.component.html","webpack:///src/app/services/api-user.service.ts","webpack:///src/app/components/form/user-create/user-create.component.ts","webpack:///src/app/components/form/user-create/user-create.component.html","webpack:///src/app/services/data/user-search-service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HeaderComponent","AdminPanelComponent","environment","production","UserComponent","apiUserService","apiUserSearchService","statusLabel","checkError","controlName","errorName","userFormModel","controls","hasError","fb","group","firstName","required","email","birthDate","status","getUserFile","value","reset","formModelReset","onSearchUser","HomeComponent","displayedColumns","getUserAll","subscribe","data","userService","userAll","paginator","error","console","log","UserAllTableComponent","date","num","AppComponent","title","ApplicationComponent","AppModule","UserSearchComponent","userFile","user_file","file_id","filter","item","id","postgetFile","createImageView","file","Blob","type","url","window","URL","createObjectURL","a","document","createElement","body","appendChild","setAttribute","href","download","original_name","click","revokeObjectURL","remove","result","image","reader","FileReader","addEventListener","vievimage","readAsDataURL","dateFormat","parse","dtArray","split","dateArray","reverse","join","time","slice","dateFormatNotTime","inetNtoa","nbuffer","ArrayBuffer","ndv","DataView","setUint32","Array","i","getUint8","DownloadComponent","myFiles","formData","FormData","formModel","user_id","event","target","files","length","push","append","valid","postFile","response","splice","createOrUpdatePolicy","handleFileInput","ApiUserService","httpClient","API","post","get","user","data_file","responseType","put","UserCreateComponent","lastName","putUser","onCreateUser","UserSearchService","postUser","msg","JSON","routes","path","component","redirectTo","AppRoutingModule","forRoot","relativeLinkResolution","SidebarComponent","isExpanded","preventDefault","element","undefined","style","backgroundColor","currentTarget","toggleActive","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-info\">\n    <button style=\"float: left; margin-right: 1em;\" class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button>\n        <span class=\"material-icons md-24 md-light\"> create </span>\n    </button>\n    <h1 style=\"display: inline;\">Форма внесення данних про користувача</h1>\n</div>\n<div class=\"user-info\">\n\n    <app-user-create></app-user-create>\n\n\n    <app-user-all-table></app-user-all-table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiUserService } from '../../../services/api-user.service';\r\nimport { UserSearchService } from '../../../services/data/user-search-service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class UserComponent {\r\n  userFormModel: FormGroup;\r\n\r\n  statusLabel = ['lead', 'client', 'demo'];\r\n\r\n  constructor(private apiUserService: ApiUserService, private apiUserSearchService: UserSearchService) {\r\n    const fb = new FormBuilder();\r\n    this.userFormModel = fb.group({\r\n      firstName: [null, [Validators.required]],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      birthDate: [null, [Validators.required]],\r\n      status: [null, [Validators.required]],\r\n    })\r\n\r\n  }\r\n\r\n  public checkError = (controlName: string, errorName: string) => {\r\n    return this.userFormModel.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  onSearchUser() {\r\n    this.apiUserSearchService.getUserFile(this.userFormModel.value);\r\n  }\r\n\r\n  formModelReset() {\r\n    this.userFormModel.reset();\r\n  }\r\n}\r\n\r\n","<form class=\"example-form\" [formGroup]=\"userFormModel\" novalidate>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>First Name</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"firstName\">\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('firstName', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('firstName', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('email', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('email', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Birth Date</mat-label>\r\n        <input type=\"date\" matInput formControlName=\"birthDate\" min=\"1940-01-01\" max=\"2014-12-31\"\r\n            placeholder=\"Birth Date\">\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('birthDate', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('birthDate', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Status</mat-label>\r\n        <mat-select  formControlName=\"status\">\r\n            <mat-option disabled>select status</mat-option>\r\n            <mat-option *ngFor=\"let c of statusLabel\" [value]=\"c\">{{c}}</mat-option>\r\n        </mat-select>\r\n\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('status', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('status', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"form-group pt-4 text-center\">\r\n        <button type=\"reset\" (click)=\"formModelReset()\" mat-flat-button color=\"accent\" class=\"btn\">Clear</button>\r\n        <button type=\"submit\" (click)=\"onSearchUser()\" mat-flat-button  color=\"primary\" class=\"btn\">Search</button>\r\n    </div>\r\n</form>","import { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiUserService } from '../../services/api-user.service';\r\nimport { DataUserAll } from 'src/app/interface/data-user';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n\r\nexport class HomeComponent {\r\n  displayedColumns: string[] = ['id', 'last_name','first_name', 'birth_date', 'email', 'registration_date', 'status', 'ip_adress'];\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  userAll: MatTableDataSource<DataUserAll>;\r\n  userService:DataUserAll[];\r\n  \r\n  constructor(private apiUserService: ApiUserService) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.apiUserService.getUserAll().subscribe(data => {\r\n      this.userService = data;\r\n      this.userAll = new MatTableDataSource<DataUserAll>(data);\r\n      this.userAll.paginator = this.paginator;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","<div class=\"user-info\">\r\n    <div>\r\n        <button style=\"float: left; margin-right: 1em;\" class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button>\r\n            <span class=\"material-icons md-24 md-light\"> history </span>\r\n        </button>\r\n\r\n        <h1 style=\"display: inline;\">Завантажити файл</h1>\r\n        <p>Upload PDF(s) or Images (PNG/JPG/JPEG) 10мб</p>\r\n    </div>\r\n    <app-download [user]=userService></app-download>\r\n</div>\r\n\r\n<app-user-all-table></app-user-all-table>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApiUserService } from '../../services/api-user.service';\nimport { DataUserAll } from 'src/app/interface/data-user';\nimport { dateFormat, inetNtoa, dateFormatNotTime } from '../../libre/format';\n\n@Component({\n  selector: 'app-user-all-table',\n  templateUrl: './user-all-table.component.html',\n  styleUrls: ['./user-all-table.component.css']\n})\nexport class UserAllTableComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'last_name', 'first_name', 'birth_date', 'email', 'registration_date', 'status', 'ip_adress'];\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  userAll: MatTableDataSource<DataUserAll>;\n  userService: DataUserAll[];\n\n  constructor(private apiUserService: ApiUserService) {\n  }\n  dateFormat(date:string){\n    return dateFormat(date, 'T');\n  }\n\n  \n  dateFormatNotTime(date: string) {\n    return dateFormatNotTime(date, 'T');\n  }\n\n  inet_ntoa(num) {\n    return inetNtoa(num);\n  }\n\n  ngOnInit() {\n    this.apiUserService.getUserAll().subscribe(data => {\n      this.userService = data;\n      console.log(this.userService)\n      this.userAll = new MatTableDataSource<DataUserAll>(data);\n      this.userAll.paginator = this.paginator;\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","<div class=\"mat-elevation-z20\">\n\n    <h1 class=\"h-1\">Інформація про користувачів</h1>\n    <table mat-table [dataSource]=\"userAll\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"last_name\">\n            <th mat-header-cell *matHeaderCellDef> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"first_name\">\n            <th mat-header-cell *matHeaderCellDef> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"birth_date\">\n            <th mat-header-cell *matHeaderCellDef> Birth Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ dateFormatNotTime(element.birth_date) }} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"registration_date\">\n            <th mat-header-cell *matHeaderCellDef> Registration Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ dateFormat(element.registration_date)}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"ip_adress\">\n            <th mat-header-cell *matHeaderCellDef> Ip Aderess</th>\n            <td mat-cell *matCellDef=\"let element\"> {{inet_ntoa(element.ip_adress)}} </td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'testDownload';\r\n}\r\n","<app-application></app-application>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.component.html',\r\n  styleUrls: ['./application.component.css']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<app-sidebar></app-sidebar> \r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ApplicationComponent } from './components/application/application.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DownloadComponent } from './components/form/download/download.component';\r\nimport { UserComponent } from './components/form/user/user.component';\r\nimport { UserCreateComponent } from './components/form/user-create/user-create.component';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { UserAllTableComponent } from './components/user-all-table/user-all-table.component';\r\nimport { UserSearchComponent } from './components/user-search/user-search.component';\r\nimport { UserSearchService } from './services/data/user-search-service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ApplicationComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    HomeComponent,\r\n    DownloadComponent,\r\n    UserComponent,\r\n    UserCreateComponent,\r\n    AdminPanelComponent,\r\n    UserAllTableComponent,\r\n    UserSearchComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n   \r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n  ],\r\n  providers: [UserSearchService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserSearchService } from '../../services/data/user-search-service';\nimport { ApiUserService } from '../../services/api-user.service';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFile } from 'src/app/interface/data-file';\nimport { dateFormat } from '../../libre/format';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\n\nexport class UserSearchComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'file_name', 'original_name', 'mime',\n    'size', 'destination', 'user_id', 'date_create', 'download', 'view'];\n\n  @ViewChild('id') id: ElementRef;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  userAll: MatTableDataSource<DataFile>;\n  userService: DataFile[];\n  userFile: UserSearchService;\n  vievimage: any;\n\n  constructor(private apiUserSearchService: UserSearchService, private apiUserService: ApiUserService) {\n    this.userFile = apiUserSearchService;\n  }\n\n  dateFormat(date: string) {\n    return dateFormat(date, 'T');\n  }\n\n  ngOnInit() {\n\n    this.userAll = new MatTableDataSource(this.userFile.user_file);\n    this.userAll.paginator = this.paginator;\n  }\n\n  showId(file_id: number) {\n    const user_file = this.userFile.user_file.filter(item => item.id === file_id);\n    this.apiUserService.postgetFile(user_file[0]).subscribe(data => {\n      console.log(data);\n      this.createImageView(data);\n      const file = new Blob([data], { type: data.type });\n      let url = window.URL.createObjectURL(file);\n      let a = document.createElement('a');\n      document.body.appendChild(a);\n      a.setAttribute('style', 'display: none');\n      a.href = url;\n      a.download = user_file[0].original_name;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n\n      if (data.result === 'error') {\n        console.log(data.result);\n      }\n      console.log(data);\n    });\n  }\n\n  viewId(file_id: number) {\n    const user_file = this.userFile.user_file.filter(item => item.id === file_id);\n    this.apiUserService.postgetFile(user_file[0]).subscribe(data => {\n      this.createImageView(data);\n      if (data.result === 'error') {\n        console.log(data);\n      }\n    });\n  }\n\n  createImageView(image: Blob) {\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.vievimage = reader.result;\n    }, false);\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n}\n","<div class=\"user-info\">\n    <div>\n        <button style=\"float: left; margin-right: 1em;\" class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button>\n            <span class=\"material-icons md-24 md-light\"> manage_search </span>\n        </button>\n\n        <h1 style=\"display: inline;\">Форма пошуку</h1>\n        <p>Здійснюється пошук файлів</p>\n    </div>\n    <app-user></app-user>\n</div>\n\n<div *ngIf=\"userFile.error\" class=\"alert\">\n    <p>\n        {{userFile.error}}\n    </p>\n</div>\n\n<app-user-all-table></app-user-all-table>\n\n<div *ngIf=\"userFile.user_file\" class=\"mat-elevation-z20\">\n\n    <h1 class=\"h-1\">Інформація про файли користувачів</h1>\n    <table mat-table [dataSource]=\"userFile.user_file\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"file_name\">\n            <th mat-header-cell *matHeaderCellDef> File name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.file_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"original_name\">\n            <th mat-header-cell *matHeaderCellDef> File name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.original_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"mime\">\n            <th mat-header-cell *matHeaderCellDef> Mime </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.mime}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"size\">\n            <th mat-header-cell *matHeaderCellDef> Size </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.size}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"destination\">\n            <th mat-header-cell *matHeaderCellDef> Destination </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.destination}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"user_id\">\n            <th mat-header-cell *matHeaderCellDef> User Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user_id}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"date_create\">\n            <th mat-header-cell *matHeaderCellDef> Date Create </th>\n            <td mat-cell *matCellDef=\"let element\"> {{dateFormat(element.date_create)}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"view\">\n            <th mat-header-cell *matHeaderCellDef>View</th>\n            <td mat-cell *matCellDef=\"let element\"> <button (click)=\"viewId(element.id)\" mat-flat-button color=\"primary\"\n                    class=\"btn\"><i class=\"material-icons\">image</i></button></td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"download\">\n            <th mat-header-cell *matHeaderCellDef> Download</th>\n            <td mat-cell *matCellDef=\"let element\"> <button (click)=\"showId(element.id)\" mat-flat-button color=\"primary\"\n                    class=\"btn\"><i class=\"material-icons\">file_download</i></button></td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n<h2>View image</h2>\n<img [src]=\"vievimage\">","export function dateFormat(date: string, parse?: string) {\r\n\r\n  const dtArray = parse ? date.split(parse) : date.split(' ')\r\n\r\n  const dateArray = dtArray[0].split('-') //dtArray[0] manupulating date\r\n  const result = dateArray.reverse().join('.')\r\n  const time = dtArray[1].split(':').slice(0, 2).join(':')\r\n  return result + ' ' + time\r\n}\r\n\r\nexport function dateFormatNotTime(date: string, parse?: string) {\r\n\r\n  const dtArray = parse ? date.split(parse) : date.split(' ')\r\n\r\n  const dateArray = dtArray[0].split('-') //dtArray[0] manupulating date\r\n  const result = dateArray.reverse().join('.')\r\n  const time = dtArray[1].split(':').slice(0, 2).join(':')\r\n  return result\r\n}\r\n\r\nexport function inetNtoa(num) {\r\n  const nbuffer = new ArrayBuffer(4);\r\n  const ndv = new DataView(nbuffer);\r\n  ndv.setUint32(0, num);\r\n\r\n  const a = new Array();\r\n  for (let i = 0; i < 4; i++) {\r\n    a[i] = ndv.getUint8(i);\r\n  }\r\n  return a.join('.');\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiUserService } from '../../../services/api-user.service';\r\nimport { DataUserAll } from 'src/app/interface/data-user';\r\n@Component({\r\n  selector: 'app-download',\r\n  templateUrl: './download.component.html',\r\n  styleUrls: ['./download.component.css']\r\n})\r\nexport class DownloadComponent {\r\n  @Input()\r\n  user: DataUserAll[];\r\n  //fileToUpload: File = null;\r\n  myFiles: string[] = [];\r\n  formData = new FormData();\r\n  formModel: FormGroup;\r\n  constructor(private apiUserService: ApiUserService) {\r\n    const fb = new FormBuilder();\r\n    this.formModel = fb.group({\r\n      file: [null, Validators.required],\r\n      user_id: [null, Validators.required],\r\n    })\r\n\r\n  }\r\n  handleFileInput(event) {\r\n    this.formData.delete(\"userId\");\r\n    console.log(event.target.files.length);\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.myFiles.push(event.target.files[i]);\r\n      this.formData.append('fieldname', event.target.files[i]);\r\n    }\r\n  }\r\n\r\n  createOrUpdatePolicy() {\r\n    //отправляем файл\r\n    if (this.formModel.valid) {\r\n      if (this.formData) {\r\n        this.formData.append(\"userId\", this.formModel.controls.user_id.value);\r\n        this.apiUserService.postFile(this.formData).subscribe(response => {\r\n          this.formModelReset();\r\n        }, error => {\r\n          console.log(error);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  formModelReset() {\r\n    this.formModel.reset();\r\n    this.formData.delete(\"userId\");\r\n    this.formData.delete(\"fieldname\");\r\n    this.myFiles.splice(0, this.myFiles.length)\r\n  }\r\n\r\n}\r\n","<form class=\"example-form\" [formGroup]=\"formModel\" novalidate>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>User Id</mat-label>\r\n        <mat-select formControlName=\"user_id\">\r\n            <mat-option disabled>select status</mat-option>\r\n            <mat-option *ngFor=\"let c of user\" [value]=\"c.id\">{{c.id}}</mat-option>\r\n        </mat-select>\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n    </mat-form-field>\r\n    <!--  -->\r\n   <div *ngFor=\"let file of myFiles\">\r\n        <div>* {{file.name}} - {{file.type}} - {{file.size}}</div>\r\n    </div> \r\n    <div class=\"file\">\r\n        <button type=\"submit\" (click)=\"formModelReset()\" color=\"accent\" mat-flat-button class=\"btn\">Clear</button>\r\n        <button type=\"submit\" (click)=\"createOrUpdatePolicy()\" color=\"primary\" mat-flat-button class=\"btn\">Add</button>\r\n        <input hidden=\"true\" type=\"file\" id=\"file-input\" accept=\"image/jpeg, ,image/png, image/jpg, application/pdf\"\r\n            formControlName=\"file\" (change)=\"handleFileInput($event)\" multiple=\"true\" required>\r\n        <label for=\"file-input\">\r\n            <a mat-flat-button color=\"primary\" class=\"btn\"><i class=\"material-icons\">file_upload</i>\r\n                Загрузить файл\r\n            </a>\r\n        </label>\r\n    </div>\r\n\r\n\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DataUser } from 'src/app/interface/data-user';\r\nimport { DataFile } from 'src/app/interface/data-file';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ApiUserService {\r\n\r\n  API = 'http://localhost:3000';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  postFile(formData: FormData): Observable<Object> {\r\n    return this.httpClient.post(`${this.API}/upload`, formData);\r\n  }\r\n\r\n  getFiles(): Observable<any> {\r\n    return this.httpClient.get(`${this.API}/files`);\r\n  }\r\n\r\n  getUserAll(): Observable<any> {\r\n    return this.httpClient.get(`${this.API}`);\r\n  }\r\n\r\n  postUser(user: DataUser): Observable<any> {\r\n    return this.httpClient.post<DataUser>(`${this.API}/user`, user);\r\n  }\r\n\r\n  postgetFile(data_file: DataFile): any {\r\n    return this.httpClient.post(`${this.API}/file`, data_file, { responseType: 'blob' });\r\n  }\r\n\r\n  putUser(user: DataUser): Observable<any> {\r\n    return this.httpClient.put<DataUser>(`${this.API}/user`, user);\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiUserService } from '../../../services/api-user.service';\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.css']\n})\n\nexport class UserCreateComponent {\n  userFormModel: FormGroup;\n\n  statusLabel = ['lead', 'client', 'demo'];\n\n  constructor(private apiUserService: ApiUserService) {\n    const fb = new FormBuilder();\n    this.userFormModel = fb.group({\n      firstName: [null, [Validators.required]],\n      lastName: [null, [Validators.required]],\n      email: [null, [Validators.required, Validators.email]],\n      birthDate: [null, [Validators.required]],\n      status: [null, [Validators.required]],\n    })\n\n  }\n\n  public checkError = (controlName: string, errorName: string) => {\n    return this.userFormModel.controls[controlName].hasError(errorName);\n  }\n\n\n  onCreateUser() {\n    this.apiUserService.putUser(this.userFormModel.value).subscribe(data => {\n      //todo\n    });\n  }\n\n  formModelReset() {\n    this.userFormModel.reset();\n  }\n}\n\n","<div class=\"example-container\">\n\n    <form class=\"example-form\" [formGroup]=\"userFormModel\" novalidate>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>First Name</mat-label>\n            <input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"firstName\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('firstName', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Last Name</mat-label>\n            <input type=\"text\" matInput formControlName=\"lastName\" placeholder=\"lastName\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('lastName', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Email</mat-label>\n            <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('email', 'required')\">Shop Address is required</mat-error>\n            <mat-error *ngIf=\"checkError('email', 'email')\">Shop Address should be less than 200 characters</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Birth Date</mat-label>\n            <input type=\"date\" matInput formControlName=\"birthDate\" min=\"1940-01-01\" max=\"2014-12-31\"\n                placeholder=\"Birth Date\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('birthDate', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Status</mat-label>\n            <mat-select formControlName=\"status\">\n                <mat-option disabled>select status</mat-option>\n                <mat-option *ngFor=\"let c of statusLabel\" [value]=\"c\">{{c}}</mat-option>\n            </mat-select>\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('status', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n        <div class=\"form-group pt-4 text-center\">\n            <button type=\"reset\" (click)=\"formModelReset()\" mat-flat-button color=\"accent\" class=\"btn\">Clear</button>\n            <button type=\"submit\" (click)=\"onCreateUser()\" mat-flat-button color=\"primary\" class=\"btn\">Create</button>\n        </div>\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { DataUser } from 'src/app/interface/data-user';\nimport { DataFile } from 'src/app/interface/data-file';\nimport { ApiUserService } from '../api-user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSearchService {\n  user_file: DataFile[];\n  error: string;\n  constructor(private apiUserService: ApiUserService) {\n  }\n\n  getUserFile(userFormModel: DataUser) {\n\n    this.apiUserService.postUser(userFormModel).subscribe(data => {\n\n      if (data.result === 'error') {\n        this.error = data.msg;\n        return this.error;\n      }\n      this.user_file = JSON.parse(data.msg);\n      return this.user_file;\n\n    });\n  }\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DownloadComponent } from './components/form/download/download.component';\r\nimport { UserComponent } from './components/form/user/user.component';\r\nimport { UserCreateComponent } from './components/form/user-create/user-create.component';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { UserSearchComponent } from './components/user-search/user-search.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'admin-panel', component: AdminPanelComponent },\r\n  { path: 'user-search', component: UserSearchComponent },\r\n  { path: '**', redirectTo: '/' }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div class=\"example-container\">\r\n\t<mat-toolbar class=\"example-toolbar\">\r\n\t\t<div class=\"logo\">\r\n\t\t\t<img src=\"assets/img/logo.png\" width=\"40\" height=\"40\">\r\n\t\t</div>\r\n\r\n\t\t<span class=\"example-fill-remaining-space\"></span>\r\n\t\t<span class=\"left-p-6\">User Name</span>\r\n\t\t<mat-icon>logout</mat-icon>\r\n\t</mat-toolbar>\r\n\r\n\t<mat-sidenav-container class=\"example-sidenav-container\" autosize>\r\n\t\t<mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\" opened=\"true\">\r\n\r\n\t\t\t<mat-nav-list class=\"dashboard\">\r\n\r\n\t\t\t\t<button class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button (click)=\"isExpanded = !isExpanded\">\r\n\t\t\t\t\t<mat-icon *ngIf=\"!isExpanded\">menu</mat-icon>\r\n\t\t\t\t\t<mat-icon *ngIf=\"isExpanded\">menu_open</mat-icon>\r\n\t\t\t\t</button>\r\n\r\n\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\" routerLink=\"\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>assignment</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">assignment</p>\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\" routerLinkActive=\"active-link\" [routerLink]=\"['admin-panel']\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>admin_panel_settings</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">Admin panel</p>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\" routerLinkActive=\"active-link\" [routerLink]=\"['user-search']\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>manage_search</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">User search</p>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>image</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">Gallery</p>\r\n\t\t\t\t</a>\r\n\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t</mat-nav-list>\r\n\t\t</mat-sidenav>\r\n\r\n\t\t<div class=\"example-sidenav-content\">\r\n\t\t\t<router-outlet></router-outlet>\r\n\t\t</div>\r\n\r\n\t</mat-sidenav-container>\r\n</div>\r\n\r\n<!-- Copyright 2017 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent {\r\n  isExpanded = false;\r\n  element: HTMLElement;\r\n\r\n  toggleActive(event: any) {\r\n    debugger;\r\n    event.preventDefault();\r\n    if (this.element !== undefined) {\r\n      this.element.style.backgroundColor = \"white\";\r\n    }\r\n    var target = event.currentTarget;\r\n    target.style.backgroundColor = \"#e51282\";\r\n    this.element = target;\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}