{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/admin-panel/admin-panel.component.ts","./src/app/components/admin-panel/admin-panel.component.html","./src/environments/environment.ts","./src/app/components/form/user/user.component.ts","./src/app/components/form/user/user.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/user-all-table/user-all-table.component.ts","./src/app/components/user-all-table/user-all-table.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/application/application.component.ts","./src/app/components/application/application.component.html","./src/app/app.module.ts","./src/app/components/user-search/user-search.component.ts","./src/app/components/user-search/user-search.component.html","./src/app/libre/format.ts","./src/app/components/form/download/download.component.ts","./src/app/components/form/download/download.component.html","./src/app/services/api-user.service.ts","./src/app/components/form/user-create/user-create.component.ts","./src/app/components/form/user-create/user-create.component.html","./src/app/services/data/user-search-service.ts","./src/app/app-routing.module.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-info\">\n    <button style=\"float: left; margin-right: 1em;\" class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button>\n        <span class=\"material-icons md-24 md-light\"> create </span>\n    </button>\n    <h1 style=\"display: inline;\">Форма внесення данних про користувача</h1>\n</div>\n<div class=\"user-info\">\n\n    <app-user-create></app-user-create>\n\n\n    <app-user-all-table></app-user-all-table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiUserService } from '../../../services/api-user.service';\r\nimport { UserSearchService } from '../../../services/data/user-search-service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class UserComponent {\r\n  userFormModel: FormGroup;\r\n\r\n  statusLabel = ['lead', 'client', 'demo'];\r\n\r\n  constructor(private apiUserService: ApiUserService, private apiUserSearchService: UserSearchService) {\r\n    const fb = new FormBuilder();\r\n    this.userFormModel = fb.group({\r\n      firstName: [null, [Validators.required]],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      birthDate: [null, [Validators.required]],\r\n      status: [null, [Validators.required]],\r\n    })\r\n\r\n  }\r\n\r\n  public checkError = (controlName: string, errorName: string) => {\r\n    return this.userFormModel.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  onSearchUser() {\r\n    this.apiUserSearchService.getUserFile(this.userFormModel.value);\r\n  }\r\n\r\n  formModelReset() {\r\n    this.userFormModel.reset();\r\n  }\r\n}\r\n\r\n","<form class=\"example-form\" [formGroup]=\"userFormModel\" novalidate>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>First Name</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"firstName\">\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('firstName', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('firstName', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('email', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('email', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Birth Date</mat-label>\r\n        <input type=\"date\" matInput formControlName=\"birthDate\" min=\"1940-01-01\" max=\"2014-12-31\"\r\n            placeholder=\"Birth Date\">\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('birthDate', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('birthDate', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Status</mat-label>\r\n        <mat-select  formControlName=\"status\">\r\n            <mat-option disabled>select status</mat-option>\r\n            <mat-option *ngFor=\"let c of statusLabel\" [value]=\"c\">{{c}}</mat-option>\r\n        </mat-select>\r\n\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"checkError('status', 'required')\">Shop Address is required</mat-error>\r\n        <mat-error *ngIf=\"checkError('status', 'email')\">Shop Address should be less than 200 characters</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"form-group pt-4 text-center\">\r\n        <button type=\"reset\" (click)=\"formModelReset()\" mat-flat-button color=\"accent\" class=\"btn\">Clear</button>\r\n        <button type=\"submit\" (click)=\"onSearchUser()\" mat-flat-button  color=\"primary\" class=\"btn\">Search</button>\r\n    </div>\r\n</form>","import { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiUserService } from '../../services/api-user.service';\r\nimport { DataUserAll } from 'src/app/interface/data-user';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n\r\nexport class HomeComponent {\r\n  displayedColumns: string[] = ['id', 'last_name','first_name', 'birth_date', 'email', 'registration_date', 'status', 'ip_adress'];\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  userAll: MatTableDataSource<DataUserAll>;\r\n  userService:DataUserAll[];\r\n  \r\n  constructor(private apiUserService: ApiUserService) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.apiUserService.getUserAll().subscribe(data => {\r\n      this.userService = data;\r\n      this.userAll = new MatTableDataSource<DataUserAll>(data);\r\n      this.userAll.paginator = this.paginator;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}","<div class=\"user-info\">\r\n    <div>\r\n        <button style=\"float: left; margin-right: 1em;\" class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button>\r\n            <span class=\"material-icons md-24 md-light\"> history </span>\r\n        </button>\r\n\r\n        <h1 style=\"display: inline;\">Завантажити файл</h1>\r\n        <p>Upload PDF(s) or Images (PNG/JPG/JPEG) 10мб</p>\r\n    </div>\r\n    <app-download [user]=userService></app-download>\r\n</div>\r\n\r\n<app-user-all-table></app-user-all-table>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApiUserService } from '../../services/api-user.service';\nimport { DataUserAll } from 'src/app/interface/data-user';\nimport { dateFormat, inetNtoa, dateFormatNotTime } from '../../libre/format';\n\n@Component({\n  selector: 'app-user-all-table',\n  templateUrl: './user-all-table.component.html',\n  styleUrls: ['./user-all-table.component.css']\n})\nexport class UserAllTableComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'last_name', 'first_name', 'birth_date', 'email', 'registration_date', 'status', 'ip_adress'];\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  userAll: MatTableDataSource<DataUserAll>;\n  userService: DataUserAll[];\n\n  constructor(private apiUserService: ApiUserService) {\n  }\n  dateFormat(date:string){\n    return dateFormat(date, 'T');\n  }\n\n  \n  dateFormatNotTime(date: string) {\n    return dateFormatNotTime(date, 'T');\n  }\n\n  inet_ntoa(num) {\n    return inetNtoa(num);\n  }\n\n  ngOnInit() {\n    this.apiUserService.getUserAll().subscribe(data => {\n      this.userService = data;\n      console.log(this.userService)\n      this.userAll = new MatTableDataSource<DataUserAll>(data);\n      this.userAll.paginator = this.paginator;\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","<div class=\"mat-elevation-z20\">\n\n    <h1 class=\"h-1\">Інформація про користувачів</h1>\n    <table mat-table [dataSource]=\"userAll\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"last_name\">\n            <th mat-header-cell *matHeaderCellDef> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"first_name\">\n            <th mat-header-cell *matHeaderCellDef> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"birth_date\">\n            <th mat-header-cell *matHeaderCellDef> Birth Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ dateFormatNotTime(element.birth_date) }} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"registration_date\">\n            <th mat-header-cell *matHeaderCellDef> Registration Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ dateFormat(element.registration_date)}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"ip_adress\">\n            <th mat-header-cell *matHeaderCellDef> Ip Aderess</th>\n            <td mat-cell *matCellDef=\"let element\"> {{inet_ntoa(element.ip_adress)}} </td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'testDownload';\r\n}\r\n","<app-application></app-application>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.component.html',\r\n  styleUrls: ['./application.component.css']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<app-sidebar></app-sidebar> \r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ApplicationComponent } from './components/application/application.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DownloadComponent } from './components/form/download/download.component';\r\nimport { UserComponent } from './components/form/user/user.component';\r\nimport { UserCreateComponent } from './components/form/user-create/user-create.component';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { UserAllTableComponent } from './components/user-all-table/user-all-table.component';\r\nimport { UserSearchComponent } from './components/user-search/user-search.component';\r\nimport { UserSearchService } from './services/data/user-search-service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ApplicationComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    HomeComponent,\r\n    DownloadComponent,\r\n    UserComponent,\r\n    UserCreateComponent,\r\n    AdminPanelComponent,\r\n    UserAllTableComponent,\r\n    UserSearchComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n   \r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n  ],\r\n  providers: [UserSearchService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserSearchService } from '../../services/data/user-search-service';\nimport { ApiUserService } from '../../services/api-user.service';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFile } from 'src/app/interface/data-file';\nimport { dateFormat } from '../../libre/format';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\n\nexport class UserSearchComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'file_name', 'original_name', 'mime',\n    'size', 'destination', 'user_id', 'date_create', 'download', 'view'];\n\n  @ViewChild('id') id: ElementRef;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  userAll: MatTableDataSource<DataFile>;\n  userService: DataFile[];\n  userFile: UserSearchService;\n  vievimage: any;\n\n  constructor(private apiUserSearchService: UserSearchService, private apiUserService: ApiUserService) {\n    this.userFile = apiUserSearchService;\n  }\n\n  dateFormat(date: string) {\n    return dateFormat(date, 'T');\n  }\n\n  ngOnInit() {\n\n    this.userAll = new MatTableDataSource(this.userFile.user_file);\n    this.userAll.paginator = this.paginator;\n  }\n\n  showId(file_id: number) {\n    const user_file = this.userFile.user_file.filter(item => item.id === file_id);\n    this.apiUserService.postgetFile(user_file[0]).subscribe(data => {\n      console.log(data);\n      this.createImageView(data);\n      const file = new Blob([data], { type: data.type });\n      let url = window.URL.createObjectURL(file);\n      let a = document.createElement('a');\n      document.body.appendChild(a);\n      a.setAttribute('style', 'display: none');\n      a.href = url;\n      a.download = user_file[0].original_name;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n\n      if (data.result === 'error') {\n        console.log(data.result);\n      }\n      console.log(data);\n    });\n  }\n\n  viewId(file_id: number) {\n    const user_file = this.userFile.user_file.filter(item => item.id === file_id);\n    this.apiUserService.postgetFile(user_file[0]).subscribe(data => {\n      this.createImageView(data);\n      if (data.result === 'error') {\n        console.log(data);\n      }\n    });\n  }\n\n  createImageView(image: Blob) {\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.vievimage = reader.result;\n    }, false);\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n}\n","<div class=\"user-info\">\n    <div>\n        <button style=\"float: left; margin-right: 1em;\" class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button>\n            <span class=\"material-icons md-24 md-light\"> manage_search </span>\n        </button>\n\n        <h1 style=\"display: inline;\">Форма пошуку</h1>\n        <p>Здійснюється пошук файлів</p>\n    </div>\n    <app-user></app-user>\n</div>\n\n<div *ngIf=\"userFile.error\" class=\"alert\">\n    <p>\n        {{userFile.error}}\n    </p>\n</div>\n\n<app-user-all-table></app-user-all-table>\n\n<div *ngIf=\"userFile.user_file\" class=\"mat-elevation-z20\">\n\n    <h1 class=\"h-1\">Інформація про файли користувачів</h1>\n    <table mat-table [dataSource]=\"userFile.user_file\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"file_name\">\n            <th mat-header-cell *matHeaderCellDef> File name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.file_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"original_name\">\n            <th mat-header-cell *matHeaderCellDef> File name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.original_name}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"mime\">\n            <th mat-header-cell *matHeaderCellDef> Mime </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.mime}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"size\">\n            <th mat-header-cell *matHeaderCellDef> Size </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.size}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"destination\">\n            <th mat-header-cell *matHeaderCellDef> Destination </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.destination}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"user_id\">\n            <th mat-header-cell *matHeaderCellDef> User Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user_id}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"date_create\">\n            <th mat-header-cell *matHeaderCellDef> Date Create </th>\n            <td mat-cell *matCellDef=\"let element\"> {{dateFormat(element.date_create)}} </td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"view\">\n            <th mat-header-cell *matHeaderCellDef>View</th>\n            <td mat-cell *matCellDef=\"let element\"> <button (click)=\"viewId(element.id)\" mat-flat-button color=\"primary\"\n                    class=\"btn\"><i class=\"material-icons\">image</i></button></td>\n        </ng-container>\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"download\">\n            <th mat-header-cell *matHeaderCellDef> Download</th>\n            <td mat-cell *matCellDef=\"let element\"> <button (click)=\"showId(element.id)\" mat-flat-button color=\"primary\"\n                    class=\"btn\"><i class=\"material-icons\">file_download</i></button></td>\n        </ng-container>\n\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n<h2>View image</h2>\n<img [src]=\"vievimage\">","export function dateFormat(date: string, parse?: string) {\r\n\r\n  const dtArray = parse ? date.split(parse) : date.split(' ')\r\n\r\n  const dateArray = dtArray[0].split('-') //dtArray[0] manupulating date\r\n  const result = dateArray.reverse().join('.')\r\n  const time = dtArray[1].split(':').slice(0, 2).join(':')\r\n  return result + ' ' + time\r\n}\r\n\r\nexport function dateFormatNotTime(date: string, parse?: string) {\r\n\r\n  const dtArray = parse ? date.split(parse) : date.split(' ')\r\n\r\n  const dateArray = dtArray[0].split('-') //dtArray[0] manupulating date\r\n  const result = dateArray.reverse().join('.')\r\n  const time = dtArray[1].split(':').slice(0, 2).join(':')\r\n  return result\r\n}\r\n\r\nexport function inetNtoa(num) {\r\n  const nbuffer = new ArrayBuffer(4);\r\n  const ndv = new DataView(nbuffer);\r\n  ndv.setUint32(0, num);\r\n\r\n  const a = new Array();\r\n  for (let i = 0; i < 4; i++) {\r\n    a[i] = ndv.getUint8(i);\r\n  }\r\n  return a.join('.');\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiUserService } from '../../../services/api-user.service';\r\nimport { DataUserAll } from 'src/app/interface/data-user';\r\n@Component({\r\n  selector: 'app-download',\r\n  templateUrl: './download.component.html',\r\n  styleUrls: ['./download.component.css']\r\n})\r\nexport class DownloadComponent {\r\n  @Input()\r\n  user: DataUserAll[];\r\n  //fileToUpload: File = null;\r\n  myFiles: string[] = [];\r\n  formData = new FormData();\r\n  formModel: FormGroup;\r\n  constructor(private apiUserService: ApiUserService) {\r\n    const fb = new FormBuilder();\r\n    this.formModel = fb.group({\r\n      file: [null, Validators.required],\r\n      user_id: [null, Validators.required],\r\n    })\r\n\r\n  }\r\n  handleFileInput(event) {\r\n    this.formData.delete(\"userId\");\r\n    console.log(event.target.files.length);\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.myFiles.push(event.target.files[i]);\r\n      this.formData.append('fieldname', event.target.files[i]);\r\n    }\r\n  }\r\n\r\n  createOrUpdatePolicy() {\r\n    //отправляем файл\r\n    if (this.formModel.valid) {\r\n      if (this.formData) {\r\n        this.formData.append(\"userId\", this.formModel.controls.user_id.value);\r\n        this.apiUserService.postFile(this.formData).subscribe(response => {\r\n          this.formModelReset();\r\n        }, error => {\r\n          console.log(error);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  formModelReset() {\r\n    this.formModel.reset();\r\n    this.formData.delete(\"userId\");\r\n    this.formData.delete(\"fieldname\");\r\n    this.myFiles.splice(0, this.myFiles.length)\r\n  }\r\n\r\n}\r\n","<form class=\"example-form\" [formGroup]=\"formModel\" novalidate>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n        <mat-label>User Id</mat-label>\r\n        <mat-select formControlName=\"user_id\">\r\n            <mat-option disabled>select status</mat-option>\r\n            <mat-option *ngFor=\"let c of user\" [value]=\"c.id\">{{c.id}}</mat-option>\r\n        </mat-select>\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n    </mat-form-field>\r\n    <!--  -->\r\n   <div *ngFor=\"let file of myFiles\">\r\n        <div>* {{file.name}} - {{file.type}} - {{file.size}}</div>\r\n    </div> \r\n    <div class=\"file\">\r\n        <button type=\"submit\" (click)=\"formModelReset()\" color=\"accent\" mat-flat-button class=\"btn\">Clear</button>\r\n        <button type=\"submit\" (click)=\"createOrUpdatePolicy()\" color=\"primary\" mat-flat-button class=\"btn\">Add</button>\r\n        <input hidden=\"true\" type=\"file\" id=\"file-input\" accept=\"image/jpeg, ,image/png, image/jpg, application/pdf\"\r\n            formControlName=\"file\" (change)=\"handleFileInput($event)\" multiple=\"true\" required>\r\n        <label for=\"file-input\">\r\n            <a mat-flat-button color=\"primary\" class=\"btn\"><i class=\"material-icons\">file_upload</i>\r\n                Загрузить файл\r\n            </a>\r\n        </label>\r\n    </div>\r\n\r\n\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DataUser } from 'src/app/interface/data-user';\r\nimport { DataFile } from 'src/app/interface/data-file';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ApiUserService {\r\n\r\n  API = 'http://localhost:3000';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  postFile(formData: FormData): Observable<Object> {\r\n    return this.httpClient.post(`${this.API}/upload`, formData);\r\n  }\r\n\r\n  getFiles(): Observable<any> {\r\n    return this.httpClient.get(`${this.API}/files`);\r\n  }\r\n\r\n  getUserAll(): Observable<any> {\r\n    return this.httpClient.get(`${this.API}`);\r\n  }\r\n\r\n  postUser(user: DataUser): Observable<any> {\r\n    return this.httpClient.post<DataUser>(`${this.API}/user`, user);\r\n  }\r\n\r\n  postgetFile(data_file: DataFile): any {\r\n    return this.httpClient.post(`${this.API}/file`, data_file, { responseType: 'blob' });\r\n  }\r\n\r\n  putUser(user: DataUser): Observable<any> {\r\n    return this.httpClient.put<DataUser>(`${this.API}/user`, user);\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiUserService } from '../../../services/api-user.service';\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.css']\n})\n\nexport class UserCreateComponent {\n  userFormModel: FormGroup;\n\n  statusLabel = ['lead', 'client', 'demo'];\n\n  constructor(private apiUserService: ApiUserService) {\n    const fb = new FormBuilder();\n    this.userFormModel = fb.group({\n      firstName: [null, [Validators.required]],\n      lastName: [null, [Validators.required]],\n      email: [null, [Validators.required, Validators.email]],\n      birthDate: [null, [Validators.required]],\n      status: [null, [Validators.required]],\n    })\n\n  }\n\n  public checkError = (controlName: string, errorName: string) => {\n    return this.userFormModel.controls[controlName].hasError(errorName);\n  }\n\n\n  onCreateUser() {\n    this.apiUserService.putUser(this.userFormModel.value).subscribe(data => {\n      //todo\n    });\n  }\n\n  formModelReset() {\n    this.userFormModel.reset();\n  }\n}\n\n","<div class=\"example-container\">\n\n    <form class=\"example-form\" [formGroup]=\"userFormModel\" novalidate>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>First Name</mat-label>\n            <input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"firstName\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('firstName', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Last Name</mat-label>\n            <input type=\"text\" matInput formControlName=\"lastName\" placeholder=\"lastName\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('lastName', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Email</mat-label>\n            <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('email', 'required')\">Shop Address is required</mat-error>\n            <mat-error *ngIf=\"checkError('email', 'email')\">Shop Address should be less than 200 characters</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Birth Date</mat-label>\n            <input type=\"date\" matInput formControlName=\"birthDate\" min=\"1940-01-01\" max=\"2014-12-31\"\n                placeholder=\"Birth Date\">\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('birthDate', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Status</mat-label>\n            <mat-select formControlName=\"status\">\n                <mat-option disabled>select status</mat-option>\n                <mat-option *ngFor=\"let c of statusLabel\" [value]=\"c\">{{c}}</mat-option>\n            </mat-select>\n            <mat-hint>Errors appear instantly!</mat-hint>\n            <mat-error *ngIf=\"checkError('status', 'required')\">Shop Address is required</mat-error>\n        </mat-form-field>\n\n        <div class=\"form-group pt-4 text-center\">\n            <button type=\"reset\" (click)=\"formModelReset()\" mat-flat-button color=\"accent\" class=\"btn\">Clear</button>\n            <button type=\"submit\" (click)=\"onCreateUser()\" mat-flat-button color=\"primary\" class=\"btn\">Create</button>\n        </div>\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { DataUser } from 'src/app/interface/data-user';\nimport { DataFile } from 'src/app/interface/data-file';\nimport { ApiUserService } from '../api-user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSearchService {\n  user_file: DataFile[];\n  error: string;\n  constructor(private apiUserService: ApiUserService) {\n  }\n\n  getUserFile(userFormModel: DataUser) {\n\n    this.apiUserService.postUser(userFormModel).subscribe(data => {\n\n      if (data.result === 'error') {\n        this.error = data.msg;\n        return this.error;\n      }\n      this.user_file = JSON.parse(data.msg);\n      return this.user_file;\n\n    });\n  }\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DownloadComponent } from './components/form/download/download.component';\r\nimport { UserComponent } from './components/form/user/user.component';\r\nimport { UserCreateComponent } from './components/form/user-create/user-create.component';\r\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\r\nimport { UserSearchComponent } from './components/user-search/user-search.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'admin-panel', component: AdminPanelComponent },\r\n  { path: 'user-search', component: UserSearchComponent },\r\n  { path: '**', redirectTo: '/' }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div class=\"example-container\">\r\n\t<mat-toolbar class=\"example-toolbar\">\r\n\t\t<div class=\"logo\">\r\n\t\t\t<img src=\"assets/img/logo.png\" width=\"40\" height=\"40\">\r\n\t\t</div>\r\n\r\n\t\t<span class=\"example-fill-remaining-space\"></span>\r\n\t\t<span class=\"left-p-6\">User Name</span>\r\n\t\t<mat-icon>logout</mat-icon>\r\n\t</mat-toolbar>\r\n\r\n\t<mat-sidenav-container class=\"example-sidenav-container\" autosize>\r\n\t\t<mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\" opened=\"true\">\r\n\r\n\t\t\t<mat-nav-list class=\"dashboard\">\r\n\r\n\t\t\t\t<button class=\"button-menu\" mat-mini-fab color=\"primary\" mat-button (click)=\"isExpanded = !isExpanded\">\r\n\t\t\t\t\t<mat-icon *ngIf=\"!isExpanded\">menu</mat-icon>\r\n\t\t\t\t\t<mat-icon *ngIf=\"isExpanded\">menu_open</mat-icon>\r\n\t\t\t\t</button>\r\n\r\n\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\" routerLink=\"\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>assignment</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">assignment</p>\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\" routerLinkActive=\"active-link\" [routerLink]=\"['admin-panel']\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>admin_panel_settings</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">Admin panel</p>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\" routerLinkActive=\"active-link\" [routerLink]=\"['user-search']\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>manage_search</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">User search</p>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a mat-list-item (click)=\"toggleActive($event)\">\r\n\t\t\t\t\t<mat-icon mat-list-icon>image</mat-icon>\r\n\t\t\t\t\t<p matLine *ngIf=\"isExpanded\">Gallery</p>\r\n\t\t\t\t</a>\r\n\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t</mat-nav-list>\r\n\t\t</mat-sidenav>\r\n\r\n\t\t<div class=\"example-sidenav-content\">\r\n\t\t\t<router-outlet></router-outlet>\r\n\t\t</div>\r\n\r\n\t</mat-sidenav-container>\r\n</div>\r\n\r\n<!-- Copyright 2017 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent {\r\n  isExpanded = false;\r\n  element: HTMLElement;\r\n\r\n  toggleActive(event: any) {\r\n    debugger;\r\n    event.preventDefault();\r\n    if (this.element !== undefined) {\r\n      this.element.style.backgroundColor = \"white\";\r\n    }\r\n    var target = event.currentTarget;\r\n    target.style.backgroundColor = \"#e51282\";\r\n    this.element = target;\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}